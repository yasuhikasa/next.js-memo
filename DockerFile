Build Stage
FROM node:16-alpine AS build

WORKDIR /build

COPY package*.json ./
RUN npm ci

COPY . .
RUN npm run production_build && rm -rf ./dist/tests

------------------------------------------
Package install Stage
FROM node:16-alpine AS module

WORKDIR /modules

COPY package*.json ./

RUN npm ci --production

------------------------------------------
Run Stage
FROM node:16-alpine AS final

ENV NODE_ENV=production
ENV HOSTNAME=di_webapisrv
ENV EXT_PORT=4000
ENV INT_PORT=5000
ENV NETWORK=work_app_default
ARG STUBMODE=off
ENV STUBMODE=${STUBMODE}

WORKDIR /app

COPY package*.json ./

COPY assets ./assets
RUN chmod a+rw assets

COPY --from=build /build/dist ./dist
COPY --from=module /modules/node_modules ./node_modules

EXPOSE ${EXT_PORT} ${INT_PORT}

CMD ["dist/app"]

# # ビルドステージ
# FROM node:16-alpine AS build

# # ワークディレクトリの設定
# WORKDIR /build

# # 依存関係のコピーとインストール
# COPY package*.json ./
# RUN npm ci

# # ソースコードのコピー
# COPY . .

# # プロダクションビルドの実行
# RUN npm run production_build && rm -rf ./dist/tests

# # ------------------------------------------

# # 本番の依存関係のインストールステージ
# FROM node:16-alpine AS module

# WORKDIR /modules

# COPY package*.json ./
# RUN npm ci --production

# # ------------------------------------------

# # 実行ステージ
# FROM node:16-alpine AS final

# # 環境変数の設定
# ENV NODE_ENV=production
# ENV HOSTNAME=di_webapisrv
# ENV EXT_PORT=4000
# ENV INT_PORT=5000
# ENV NETWORK=work_app_default
# ARG STUBMODE=off
# ENV STUBMODE=${STUBMODE}

# WORKDIR /app

# # 必要なファイルやディレクトリのコピー
# COPY package*.json ./
# COPY assets ./assets
# RUN chmod a+rw assets

# # ビルドしたファイルと依存関係をコピー
# COPY --from=build /build/.next/standalone ./dist/.next/standalone
# COPY --from=module /modules/node_modules ./node_modules

# # ポートの公開
# EXPOSE ${EXT_PORT} ${INT_PORT}

# # アプリケーションの実行
# CMD ["node", "dist/.next/standalone/server.js"]
